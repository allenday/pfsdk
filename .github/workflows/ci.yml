name: CI

on:
  push:
    branches:
      - main
      - dev
      - 'dev-*'
  pull_request:
    branches:
      - main
      - dev
      - 'dev-*'

permissions:
  contents: write  # Required for auto-committing generated files

env:
  PYTHON_VERSION: "3.12"

jobs:
  proto-validation:
    name: Proto Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup A2A dependency
        run: ./scripts/setup-a2a-dependency.sh

      - name: Lint proto files
        run: |
          cd proto
          buf lint
      
      - name: Check for breaking changes
        if: github.event_name == 'pull_request'
        run: |
          cd proto
          # Skip breaking change detection if main branch doesn't exist or can't be accessed
          if git ls-remote --exit-code --heads origin main > /dev/null 2>&1; then
            buf breaking --against 'https://github.com/${{ github.repository }}.git#branch=main,subdir=proto' || echo "‚ö†Ô∏è Breaking change detection failed, skipping"
          else
            echo "‚ÑπÔ∏è Main branch not found, skipping breaking change detection"
          fi

  code-generation:
    name: Code Generation
    runs-on: ubuntu-latest
    needs: proto-validation
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: typescript/package-lock.json

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup A2A dependency
        run: ./scripts/setup-a2a-dependency.sh
      
      # Use Makefile for all code generation and version bumping
      - name: Makefile help (discoverability)
        run: make help

      - name: Bump all version strings
        run: make bump-version

      - name: Generate all code and tests
        run: make regen-all

      - name: Generate dynamic proto tests
        run: make tests-dynamic

      - name: Verify generated code
        run: |
          python -c "
          import sys
          sys.path.insert(0, 'python')
          from postfiat.v3 import messages_pb2
          print('‚úÖ Generated code imports successfully')
          "

      - name: Run all tests (Python + TypeScript + Solidity)
        run: make tests

  python-tests:
    name: Python & TypeScript Tests
    runs-on: ubuntu-latest
    needs: code-generation
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: typescript/package-lock.json

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup A2A dependency
        run: ./scripts/setup-a2a-dependency.sh

      # Use Makefile for all code generation and tests
      - name: Makefile help (discoverability)
        run: make help

      - name: Bump all version strings
        run: make bump-version

      - name: Generate all code and tests
        run: make regen-all

      - name: Run all tests (Python + TypeScript + Solidity)
        run: make tests

  solidity-tests:
    name: Solidity Tests
    runs-on: ubuntu-latest
    needs: code-generation
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: solidity/package-lock.json

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup A2A dependency
        run: ./scripts/setup-a2a-dependency.sh

      - name: Install Solidity dependencies
        run: make sol-deps

      - name: Generate protobuf code
        run: make proto

      - name: Build Solidity contracts
        run: make sol-build

      - name: Run Solidity tests
        run: make sol-test

      - name: Run Solidity tests with gas reporting
        run: |
          cd solidity
          forge test --gas-report

  build:
    name: Build Python Package
    runs-on: ubuntu-latest
    needs: [proto-validation, python-tests, solidity-tests]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: typescript/package-lock.json

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup A2A dependency
        run: ./scripts/setup-a2a-dependency.sh

      # Use Makefile for code generation and version bumping
      - name: Makefile help (discoverability)
        run: make help

      - name: Bump all version strings
        run: make bump-version

      - name: Generate all code and tests
        run: make regen-all

      - name: Build Python package
        run: |
          cd python
          python -m build

      - name: Check Python package
        run: twine check python/dist/*

      - name: Verify package contents
        run: |
          echo "üîç Verifying package contents include A2A module..."
          cd python
          WHEEL_FILE=$(ls dist/*.whl | head -1)
          echo "Checking wheel: $WHEEL_FILE"
          mkdir -p /tmp/wheel_check
          cd /tmp/wheel_check
          unzip -q "$OLDPWD/$WHEEL_FILE"
          echo "Checking for A2A module files..."
          if [ -f "a2a/__init__.py" ]; then
            echo "‚úÖ a2a/__init__.py found"
          else
            echo "‚ùå a2a/__init__.py missing"
            exit 1
          fi
          if [ -f "a2a/v1/__init__.py" ]; then
            echo "‚úÖ a2a/v1/__init__.py found"
          else
            echo "‚ùå a2a/v1/__init__.py missing"
            exit 1
          fi
          if [ -f "a2a/v1/a2a_pb2.py" ]; then
            echo "‚úÖ a2a/v1/a2a_pb2.py found"
          else
            echo "‚ùå a2a/v1/a2a_pb2.py missing"
            exit 1
          fi
          if [ -f "postfiat/envelope/__init__.py" ]; then
            echo "‚úÖ postfiat/envelope/__init__.py found"
          else
            echo "‚ùå postfiat/envelope/__init__.py missing"
            exit 1
          fi
          if [ -f "postfiat/envelope/factory.py" ]; then
            echo "‚úÖ postfiat/envelope/factory.py found"
          else
            echo "‚ùå postfiat/envelope/factory.py missing"
            exit 1
          fi
          echo "‚úÖ All critical package contents verified"
          cd "$OLDPWD"
          rm -rf /tmp/wheel_check

      - name: Upload Python build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-dist
          path: python/dist/

  typescript-tests:
    name: TypeScript Tests
    runs-on: ubuntu-latest
    needs: code-generation
    strategy:
      matrix:
        node-version: ["20", "22"]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: typescript/package-lock.json

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup A2A dependency
        run: ./scripts/setup-a2a-dependency.sh

      # Use Makefile for all code generation and tests
      - name: Makefile help (discoverability)
        run: make help

      - name: Bump all version strings
        run: make bump-version

      - name: Generate all code and tests
        run: make regen-all

      - name: Run all tests (Python + TypeScript + Solidity)
        run: make tests

      - name: Lint TypeScript code
        run: |
          cd typescript
          npm run lint || echo "Linting step failed but continuing..."

      - name: Type check TypeScript code
        run: |
          cd typescript
          npm run typecheck || echo "Type checking step failed but continuing..."

  typescript-build:
    name: Build TypeScript Package
    runs-on: ubuntu-latest
    needs: [proto-validation, typescript-tests]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: typescript/package-lock.json

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup A2A dependency
        run: ./scripts/setup-a2a-dependency.sh

      # Use Makefile for code generation and version bumping
      - name: Makefile help (discoverability)
        run: make help

      - name: Bump all version strings
        run: make bump-version

      - name: Regenerate all code and tests
        run: make regen-all

      - name: Build TypeScript package (with codegen)
        run: make build-ts

      - name: Upload TypeScript build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: typescript-dist
          path: typescript/dist/

  solidity-build:
    name: Build Solidity Package
    runs-on: ubuntu-latest
    needs: [proto-validation, solidity-tests]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: solidity/package-lock.json

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup A2A dependency
        run: ./scripts/setup-a2a-dependency.sh

      # Use Makefile for code generation and version bumping
      - name: Makefile help (discoverability)
        run: make help

      - name: Bump all version strings
        run: make bump-version

      - name: Regenerate all code and tests
        run: make regen-all

      - name: Build Solidity package
        run: make build-sol

      - name: Upload Solidity build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: solidity-dist
          path: solidity/out/
