name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

permissions:
  contents: write  # Required for auto-committing generated files

env:
  PYTHON_VERSION: "3.12"

jobs:
  proto-validation:
    name: Proto Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup A2A dependency
        run: ./scripts/setup-a2a-dependency.sh

      - name: Lint proto files
        run: |
          cd proto
          buf lint
      
      - name: Check for breaking changes
        if: github.event_name == 'pull_request'
        run: |
          cd proto
          # Skip breaking change detection if main branch doesn't exist or can't be accessed
          if git ls-remote --exit-code --heads origin main > /dev/null 2>&1; then
            buf breaking --against 'https://github.com/${{ github.repository }}.git#branch=main,subdir=proto' || echo "⚠️ Breaking change detection failed, skipping"
          else
            echo "ℹ️ Main branch not found, skipping breaking change detection"
          fi

  code-generation:
    name: Code Generation
    runs-on: ubuntu-latest
    needs: proto-validation
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: typescript/package-lock.json

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup A2A dependency
        run: ./scripts/setup-a2a-dependency.sh
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -e python/
          pip install pytest
      
      - name: Install TypeScript dependencies
        run: |
          cd typescript
          npm ci
      
      - name: Generate protobuf code
        run: |
          cd proto
          buf mod update
          buf generate --template buf.gen.yaml
      
      - name: Verify generated code
        run: |
          python -c "
          import sys
          sys.path.insert(0, 'python')
          from postfiat.v3 import messages_pb2
          print('✅ Generated code imports successfully')
          "

      - name: Generate Python types from protobuf
        run: python python/scripts/generate_python_types.py

      - name: Generate dynamic protobuf tests
        run: python python/scripts/generate_dynamic_protobuf_tests.py

      - name: Run tests
        run: |
          # Run both manual and generated tests
          cd python
          python -m pytest tests/ -v --tb=short

      - name: Generate and run dynamic protobuf tests
        run: |
          python python/scripts/generate_dynamic_protobuf_tests.py
          cd python
          python -m pytest tests/generated/test_dynamic_*.py -v --tb=short

      - name: Commit generated files to main branch
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -f python/postfiat/types/enums.py python/postfiat/exceptions.py python/postfiat/v3/*_pb2.py python/postfiat/v3/*_pb2_grpc.py python/a2a/v1/*_pb2.py python/a2a/v1/*_pb2_grpc.py
          if ! git diff --staged --quiet; then
            git commit -m "chore: add generated files for main branch [skip ci]"
            git push origin main
          else
            echo "No changes to commit"
          fi

  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: code-generation
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: typescript/package-lock.json

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup A2A dependency
        run: ./scripts/setup-a2a-dependency.sh
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -e python/
          pip install pytest
      
      - name: Install TypeScript dependencies
        run: |
          cd typescript
          npm ci
      
      - name: Generate protobuf code
        run: |
          cd proto
          buf mod update
          buf generate --template buf.gen.yaml
      
      - name: Test package installation
        run: |
          python -c "import postfiat; print(f'PostFiat SDK v{postfiat.__version__} installed successfully')"

      - name: Generate dynamic protobuf tests
        run: python python/scripts/generate_dynamic_protobuf_tests.py

      - name: Run test suite
        run: |
          # Run both manual and generated tests
          cd python
          python -m pytest tests/ -v --tb=short

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [proto-validation, tests]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup A2A dependency
        run: ./scripts/setup-a2a-dependency.sh
      
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine pyyaml
      
      - name: Generate protobuf code
        run: |
          cd proto
          buf mod update
          buf generate --template buf.gen.yaml
      
      - name: Build package
        run: python -m build
      
      - name: Check package
        run: twine check dist/*
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
