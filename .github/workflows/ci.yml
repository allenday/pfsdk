name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  PYTHON_VERSION: "3.12"

jobs:
  proto-validation:
    name: Proto Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Lint proto files
        run: |
          cd proto
          buf lint
      
      - name: Check for breaking changes
        if: github.event_name == 'pull_request'
        run: |
          cd proto
          buf breaking --against 'https://github.com/${{ github.repository }}.git#branch=main,subdir=proto'

  code-generation:
    name: Code Generation
    runs-on: ubuntu-latest
    needs: proto-validation
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml protobuf grpcio-tools
      
      - name: Generate protobuf code
        run: |
          cd proto
          buf generate --template buf.gen.yaml
      
      - name: Verify generated code
        run: |
          python -c "
          import sys
          sys.path.insert(0, '.')
          from postfiat.v3 import wallet_service_pb2, messages_pb2
          print('âœ… Generated code imports successfully')
          "

  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: code-generation
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
      
      - name: Generate protobuf code
        run: |
          cd proto
          buf generate --template buf.gen.yaml
      
      - name: Test package installation
        run: |
          python -c "import postfiat; print(f'PostFiat SDK v{postfiat.__version__} installed successfully')"

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [proto-validation, tests]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine pyyaml
      
      - name: Generate protobuf code
        run: |
          cd proto
          buf generate --template buf.gen.yaml
      
      - name: Build package
        run: python -m build
      
      - name: Check package
        run: twine check dist/*
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/
