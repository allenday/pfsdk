name: Release

on:
  push:
    tags:
      - 'v*'

env:
  PYTHON_VERSION: "3.12"

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write  # For PyPI trusted publishing
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: typescript/package-lock.json

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      
      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup A2A dependency
        run: ./scripts/setup-a2a-dependency.sh

      # Use Makefile for all build and artifact steps
      - name: Makefile help (discoverability)
        run: make help

      - name: Bump all version strings
        run: make bump-version

      - name: Regenerate all code and tests
        run: make regen-all

      - name: Build all release artifacts (Python + TypeScript + Solidity)
        run: make release

      - name: Verify all generated files exist
        run: |
          echo "Checking generated files..."
          ls -la python/postfiat/v3/*_pb2.py python/postfiat/types/enums.py python/postfiat/exceptions.py
          echo "âœ… All generated files present"

      - name: Verify Solidity build artifacts
        run: |
          echo "Checking Solidity build artifacts..."
          ls -la solidity/out/
          echo "âœ… Solidity build artifacts present"

      - name: Extract tag name
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - name: Create GitHub Release
        run: |
          gh release create ${{ steps.tag.outputs.tag }} \
            --title "Release ${{ steps.tag.outputs.tag }}" \
            --notes "$(cat <<'EOF'
          ## Changes in ${{ steps.tag.outputs.tag }}
          
          ### ðŸš€ Features
          - Auto-generated from protobuf definitions
          - Full gRPC and REST API support
          - Type-safe Pydantic models
          - SQLModel database integration
          - FastAPI server components
          - EnvelopeFactory with automatic payload chunking
          - Solidity smart contract generation
          - Foundry-based build system
          
          ### ðŸ“¦ Installation
          ```bash
          # Python
          pip install postfiat-sdk==${{ steps.tag.outputs.tag }}
          
          # TypeScript
          npm install @postfiat/sdk@${{ steps.tag.outputs.tag }}
          
          # Solidity (development)
          git clone https://github.com/${{ github.repository }}.git
          cd pfsdk
          make sol-deps
          make proto
          make sol-build
          ```
          
          ### ðŸ“‹ API Documentation
          - [OpenAPI Spec](https://github.com/${{ github.repository }}/blob/${{ steps.tag.outputs.tag }}/api/openapi_v2_generated.swagger.json)
          - [Proto Definitions](https://github.com/${{ github.repository }}/tree/${{ steps.tag.outputs.tag }}/proto)
          - [Solidity Integration](https://github.com/${{ github.repository }}/blob/${{ steps.tag.outputs.tag }}/docs/solidity/README.md)
          EOF
          )" \
            python/dist/*.tar.gz python/dist/*.whl typescript/*.tgz solidity/out/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # TODO: Enable when ready to publish to PyPI
      # - name: Publish to PyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     verbose: true
      #     packages-dir: python/dist/
