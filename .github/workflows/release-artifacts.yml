name: Release Artifacts

on:
  push:
    tags:
      - 'release-*'

env:
  PYTHON_VERSION: "3.12"
  NODE_VERSION: "20"

jobs:
  build-artifacts:
    name: Build and Release Artifacts
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Install Python build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine pyyaml protobuf grpcio-tools

      - name: Setup A2A dependency
        run: |
          chmod +x scripts/setup-a2a-dependency.sh
          ./scripts/setup-a2a-dependency.sh

      - name: Install Python package dependencies
        run: |
          cd python
          pip install -e .

      - name: Install TypeScript dependencies
        run: |
          cd typescript
          npm ci

      - name: Generate protobuf code
        run: |
          cd proto
          buf generate --template buf.gen.yaml

      - name: Generate Python types from protobuf
        run: python python/scripts/generate_python_types.py

      - name: Build Python package
        run: |
          cd python
          python -m build --wheel --no-isolation
          python -m twine check dist/*

      - name: Generate TypeScript types from protobuf
        run: |
          cd typescript
          npm run generate:types

      - name: Build TypeScript package
        run: |
          cd typescript
          npm run build
          npm pack

      - name: Extract tag name
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Release ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: ${{ contains(github.ref_name, 'rc') || contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') }}
          generate_release_notes: true
          files: |
            typescript/*.tgz
            python/dist/*.whl
            python/dist/*.tar.gz
          body: |
            ## PostFiat SDK Release ${{ steps.tag.outputs.tag }}
            
            This release contains pre-built artifacts for both Python and TypeScript SDKs.
            
            ### ðŸ“¦ Python Package
            Download the `.whl` or `.tar.gz` file and install with:
            ```bash
            pip install postfiat-sdk-*.whl
            ```
            
            ### ðŸ“¦ TypeScript Package
            Download the `.tgz` file and install with:
            ```bash
            npm install postfiat-sdk-*.tgz
            ```
            
            ### ðŸ“š Documentation
            API documentation is available at [https://allenday.github.io/pfsdk](https://allenday.github.io/pfsdk)
            
            ### ðŸ”§ From Source
            To build from source, see the [Development Guide](https://github.com/${{ github.repository }}/blob/${{ steps.tag.outputs.tag }}/DEVELOPMENT.md).
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts-${{ steps.tag.outputs.tag }}
          path: |
            typescript/*.tgz
            python/dist/*.whl
            python/dist/*.tar.gz
          retention-days: 90