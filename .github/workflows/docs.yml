name: Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Install Go and protoc-gen-doc
        run: |
          # Install Go
          curl -LO https://go.dev/dl/go1.21.0.linux-amd64.tar.gz
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf go1.21.0.linux-amd64.tar.gz
          export PATH=$PATH:/usr/local/go/bin
          echo "/usr/local/go/bin" >> $GITHUB_PATH
          
          # Install protoc-gen-doc
          go install github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Setup A2A dependency
        run: |
          chmod +x scripts/setup-a2a-dependency.sh
          ./scripts/setup-a2a-dependency.sh

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e python/
          pip install mkdocs mkdocs-material mkdocs-swagger-ui-tag mkdocs-mermaid2-plugin
          pip install sphinx sphinx-rtd-theme sphinx-autoapi myst-parser

      - name: Install TypeScript dependencies
        run: |
          cd typescript
          npm install
          npm install --save-dev typedoc typedoc-plugin-markdown

      - name: Generate protobuf code
        run: |
          cd proto
          buf mod update
          buf generate --template buf.gen.yaml

      - name: Generate Python types and SDK
        run: |
          python python/scripts/generate_python_types.py
          python python/scripts/generate_protobuf.py

      - name: Generate TypeScript SDK
        run: |
          cd typescript
          npm run generate:all

      - name: Get latest release info
        id: latest_release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get latest release info using gh release command (includes pre-releases)
          LATEST_RELEASE=$(gh release list --limit 1 --json tagName --jq '.[0].tagName' 2>/dev/null || echo "v0.1.0-dev")
          if [ "$LATEST_RELEASE" != "v0.1.0-dev" ]; then
            RELEASE_URL=$(gh release view "$LATEST_RELEASE" --json url --jq '.url' 2>/dev/null || echo "")
            RELEASE_DATE=$(gh release view "$LATEST_RELEASE" --json publishedAt --jq '.publishedAt' 2>/dev/null || echo "")
          else
            RELEASE_URL=""
            RELEASE_DATE=""
          fi
          
          echo "latest_tag=$LATEST_RELEASE" >> $GITHUB_OUTPUT
          echo "release_url=$RELEASE_URL" >> $GITHUB_OUTPUT
          echo "release_date=$RELEASE_DATE" >> $GITHUB_OUTPUT
          echo "version=${LATEST_RELEASE#v}" >> $GITHUB_OUTPUT
          
          echo "ðŸ“¦ Latest release: $LATEST_RELEASE"
          echo "ðŸ”— Release URL: $RELEASE_URL"

      - name: Generate API documentation
        run: |
          # Generate Python API documentation with Sphinx
          mkdir -p docs/generated/python
          cd python
          
          # Create Sphinx docs directory and config manually
          mkdir -p docs
          cat > docs/conf.py << EOF
          import os
          import sys
          sys.path.insert(0, os.path.abspath('..'))
          
          project = 'PostFiat Python SDK'
          author = 'PostFiat'
          version = '${{ steps.latest_release.outputs.version }}'
          release = '${{ steps.latest_release.outputs.latest_tag }}'
          
          extensions = [
              'sphinx.ext.autodoc',
              'sphinx.ext.viewcode',
              'autoapi.extension',
          ]
          
          autoapi_dirs = ['../postfiat']
          autoapi_type = 'python'
          autoapi_file_patterns = ['*.py']
          autoapi_options = ['members', 'undoc-members', 'show-inheritance', 'show-module-summary']
          autoapi_add_toctree_entry = True
          autoapi_keep_files = True
          autoapi_root = 'api'
          autoapi_python_use_implicit_namespaces = True
          
          html_theme = 'sphinx_rtd_theme'
          html_static_path = []
          
          master_doc = 'index'
          EOF
          
          # Create index file - autoapi will add itself to toctree
          cat > docs/index.rst << EOF
          PostFiat Python SDK Documentation
          =================================
          
          Welcome to the PostFiat Python SDK documentation.
          
          Indices and tables
          ==================
          
          * :ref:\`genindex\`
          * :ref:\`modindex\`
          * :ref:\`search\`
          EOF
          
          # Build Python docs with better error handling
          cd docs
          export PYTHONPATH="/home/runner/work/pfsdk/pfsdk/python:$PYTHONPATH"
          sphinx-build -b html . _build/html || {
              echo "Sphinx build failed, trying with autodoc mock imports"
              cat >> conf.py << 'EOF'
          
          # Mock imports for generated modules that might have import issues
          autodoc_mock_imports = ['grpc', 'google.protobuf', 'a2a']
          EOF
              sphinx-build -b html . _build/html
          }
          cp -r _build/html/* ../../docs/generated/python/
          cd ../..
          
          # Generate TypeScript API documentation with TypeDoc
          mkdir -p docs/generated/typescript
          cd typescript
          npx typedoc --out ../docs/generated/typescript src/index.ts --plugin typedoc-plugin-markdown --theme markdown --skipErrorChecking
          cd ..
          
          # Copy generated OpenAPI specs
          mkdir -p docs/generated/api
          if [ -d "api" ]; then
            cp api/*.json docs/generated/api/ 2>/dev/null || echo "No JSON files found"
            cp api/*.yaml docs/generated/api/ 2>/dev/null || echo "No YAML files found"
          fi
          
          # Generate basic protobuf documentation
          python scripts/generate_docs.py

      - name: Build documentation site
        run: |
          # Create MkDocs configuration
          cat > mkdocs.yml << EOF
          site_name: PostFiat SDK Documentation
          site_description: Proto-first multi-language SDK with Python and TypeScript support
          site_url: https://allenday.github.io/pfsdk
          repo_url: https://github.com/allenday/pfsdk
          repo_name: allenday/pfsdk
          
          extra:
            version: ${{ steps.latest_release.outputs.version }}
            release_tag: ${{ steps.latest_release.outputs.latest_tag }}
            release_url: ${{ steps.latest_release.outputs.release_url }}
            release_date: ${{ steps.latest_release.outputs.release_date }}
          
          theme:
            name: material
            custom_dir: overrides
            palette:
              - scheme: default
                primary: indigo
                accent: indigo
                toggle:
                  icon: material/brightness-7
                  name: Switch to dark mode
              - scheme: slate
                primary: indigo
                accent: indigo
                toggle:
                  icon: material/brightness-4
                  name: Switch to light mode
            features:
              - navigation.tabs
              - navigation.sections
              - navigation.top
              - search.highlight
              - search.share
              - content.code.copy
          
          plugins:
            - search
            - swagger-ui-tag
          
          nav:
            - Home: index.md
            - Architecture: ARCHITECTURE.md
            - Development: DEVELOPMENT.md
            - Contributing: CONTRIBUTING.md
            - API Reference:
              - OpenAPI Specification: api/openapi.md
              - Python SDK: generated/python/index.html
              - Protocol Buffers: generated/proto/index.md
            - Research:
              - Key Management: research/KEY-MANAGEMENT.md
              - A2A Selective Disclosure: research/A2A-SELECTIVE-DISCLOSURE-EXTENSION.md
              - XRPL Chat Application: research/XRPL-CHAT-APPLICATION-ADAPTATION.md
          
          markdown_extensions:
            - admonition
            - codehilite
            - pymdownx.superfences
            - pymdownx.tabbed
            - pymdownx.details
            - toc:
                permalink: true
          EOF
          
          # Create API documentation page
          mkdir -p docs/api
          
          # Determine the correct path based on build environment
          if [ "$GITHUB_PAGES" = "true" ] || [ -n "$GITHUB_REPOSITORY" ]; then
            # GitHub Pages build - use absolute path
            SWAGGER_PATH="/pfsdk/generated/api/openapi_v2_generated.swagger.json"
          else
            # Local build - use relative path
            SWAGGER_PATH="../../generated/api/openapi_v2_generated.swagger.json"
          fi
          
          cat > docs/api/openapi.md << EOF
          # API Reference
          
          The PostFiat SDK provides both gRPC and REST APIs generated from Protocol Buffer definitions.
          
          ## OpenAPI Specification
          
          <swagger-ui src="$SWAGGER_PATH"/>
          
          ## Protocol Buffer Definitions
          
          See the [Protocol Buffer documentation](../generated/proto/index.md) for detailed type definitions.
          EOF
          
          # Create main index with dynamic version info
          cat > docs/index.md << EOF
          # PostFiat SDK Documentation
          
          Welcome to the PostFiat SDK documentation. This is a proto-first, multi-language SDK with Python and TypeScript support.
          
          ## Latest Release: ${{ steps.latest_release.outputs.latest_tag }}
          
          **[ðŸ“¦ Download Release](${{ steps.latest_release.outputs.release_url }})** | **Released:** ${{ steps.latest_release.outputs.release_date }}
          
          ## Quick Start
          
          ### Python
          \`\`\`bash
          # Install from PyPI (when published)
          pip install postfiat-sdk==${{ steps.latest_release.outputs.version }}
          
          # Or download from GitHub releases
          wget ${{ steps.latest_release.outputs.release_url }}/download/postfiat-sdk-${{ steps.latest_release.outputs.version }}.whl
          pip install postfiat-sdk-${{ steps.latest_release.outputs.version }}.whl
          \`\`\`
          
          ### TypeScript
          \`\`\`bash
          # Install from npm (when published)
          npm install @postfiat/sdk@${{ steps.latest_release.outputs.version }}
          
          # Or download from GitHub releases
          wget ${{ steps.latest_release.outputs.release_url }}/download/postfiat-sdk-${{ steps.latest_release.outputs.version }}.tgz
          npm install postfiat-sdk-${{ steps.latest_release.outputs.version }}.tgz
          \`\`\`
          
          ## Features
          
          - **Proto-first architecture**: Single source of truth for all APIs
          - **Multi-language support**: Python and TypeScript SDKs
          - **Type-safe**: Generated types and validation
          - **Modern tooling**: FastAPI, Pydantic, React hooks
          - **AI integration**: PydanticAI support for agents
          
          ## API Documentation
          
          - **[Python SDK API](generated/python/index.html)** - Complete Python API reference with Sphinx
          - **[OpenAPI Specification](api/openapi.md)** - Interactive REST API documentation
          - **[Protocol Buffers](generated/proto/index.md)** - Proto message definitions
          
          ## Architecture
          
          The SDK follows a [proto-first architecture](ARCHITECTURE.md) where Protocol Buffer definitions drive code generation for multiple languages.
          
          ## Development
          
          See the [Development Guide](DEVELOPMENT.md) for information on contributing to the SDK.
          EOF
          
          # Create version badge in header
          mkdir -p overrides/partials
          cat > overrides/partials/header.html << 'EOF'
          {% block announce %}
            <div class="md-announce">
              <div class="md-announce__inner">
                <a href="{{ config.extra.release_url }}" class="md-announce__link">
                  ðŸŽ‰ Latest Release: {{ config.extra.release_tag }} - Download Now!
                </a>
              </div>
            </div>
          {% endblock %}
          EOF
          
          # Build the documentation
          mkdocs build

      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: site/

  deploy:
    needs: build-docs
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download documentation artifacts
        uses: actions/download-artifact@v4
        with:
          name: documentation
          path: site/

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: site/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4