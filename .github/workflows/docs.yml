name: Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'proto/**'
      - 'docs/**'
      - 'python/scripts/**'
      - 'typescript/scripts/**'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'proto/**'
      - 'docs/**'
      - 'python/scripts/**'
      - 'typescript/scripts/**'
      - '.github/workflows/docs.yml'

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup A2A dependency
        run: |
          chmod +x scripts/setup-a2a-dependency.sh
          ./scripts/setup-a2a-dependency.sh

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e python/
          pip install mkdocs mkdocs-material mkdocs-swagger-ui-tag

      - name: Install TypeScript dependencies
        run: |
          cd typescript
          npm install

      - name: Generate protobuf code
        run: |
          cd proto
          buf mod update
          buf generate --template buf.gen.yaml

      - name: Generate Python types and SDK
        run: |
          python python/scripts/generate_python_types.py
          python python/scripts/generate_protobuf.py

      - name: Generate TypeScript SDK
        run: |
          cd typescript
          npm run generate:all

      - name: Generate API documentation
        run: |
          # Generate protobuf documentation
          cd proto
          buf generate --template buf.gen.docs.yaml --output ../docs/generated/
          
          # Copy generated OpenAPI specs
          mkdir -p docs/generated/api
          cp api/*.json docs/generated/api/
          cp api/*.yaml docs/generated/api/

      - name: Build documentation site
        run: |
          # Create MkDocs configuration
          cat > mkdocs.yml << 'EOF'
          site_name: PostFiat SDK Documentation
          site_description: Proto-first multi-language SDK with Python and TypeScript support
          site_url: https://allenday.github.io/pfsdk
          repo_url: https://github.com/allenday/pfsdk
          repo_name: allenday/pfsdk
          
          theme:
            name: material
            palette:
              - scheme: default
                primary: indigo
                accent: indigo
                toggle:
                  icon: material/brightness-7
                  name: Switch to dark mode
              - scheme: slate
                primary: indigo
                accent: indigo
                toggle:
                  icon: material/brightness-4
                  name: Switch to light mode
            features:
              - navigation.tabs
              - navigation.sections
              - navigation.top
              - search.highlight
              - search.share
              - content.code.copy
          
          plugins:
            - search
            - swagger-ui-tag
          
          nav:
            - Home: index.md
            - Architecture: ARCHITECTURE.md
            - Development: DEVELOPMENT.md
            - Contributing: CONTRIBUTING.md
            - API Reference:
              - OpenAPI Specification: api/openapi.md
              - Protocol Buffers: generated/proto/index.md
            - Research:
              - Key Management: research/KEY-MANAGEMENT.md
              - A2A Selective Disclosure: research/A2A-SELECTIVE-DISCLOSURE-EXTENSION.md
              - XRPL Chat Application: research/XRPL-CHAT-APPLICATION-ADAPTATION.md
          
          markdown_extensions:
            - admonition
            - codehilite
            - pymdownx.superfences
            - pymdownx.tabbed
            - pymdownx.details
            - toc:
                permalink: true
          EOF
          
          # Create API documentation page
          mkdir -p docs/api
          cat > docs/api/openapi.md << 'EOF'
          # API Reference
          
          The PostFiat SDK provides both gRPC and REST APIs generated from Protocol Buffer definitions.
          
          ## OpenAPI Specification
          
          !!! swagger-ui "OpenAPI v2 Specification"
              swagger: "../generated/api/openapi_v2_generated.swagger.json"
          
          ## Protocol Buffer Definitions
          
          See the [Protocol Buffer documentation](../generated/proto/index.md) for detailed type definitions.
          EOF
          
          # Create main index
          cat > docs/index.md << 'EOF'
          # PostFiat SDK Documentation
          
          Welcome to the PostFiat SDK documentation. This is a proto-first, multi-language SDK with Python and TypeScript support.
          
          ## Quick Start
          
          ### Python
          ```bash
          pip install postfiat-sdk
          ```
          
          ### TypeScript
          ```bash
          npm install @postfiat/sdk
          ```
          
          ## Features
          
          - **Proto-first architecture**: Single source of truth for all APIs
          - **Multi-language support**: Python and TypeScript SDKs
          - **Type-safe**: Generated types and validation
          - **Modern tooling**: FastAPI, Pydantic, React hooks
          - **AI integration**: PydanticAI support for agents
          
          ## Architecture
          
          The SDK follows a [proto-first architecture](ARCHITECTURE.md) where Protocol Buffer definitions drive code generation for multiple languages.
          
          ## Development
          
          See the [Development Guide](DEVELOPMENT.md) for information on contributing to the SDK.
          EOF
          
          # Build the documentation
          mkdocs build

      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: site/

  deploy:
    needs: build-docs
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download documentation artifacts
        uses: actions/download-artifact@v4
        with:
          name: documentation
          path: site/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: site/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4