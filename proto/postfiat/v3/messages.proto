syntax = "proto3";

package postfiat.v3;

// Import A2A proto definitions for extension compatibility
import "a2a/v1/a2a.proto";

option go_package = "postfiat/v3;postfiatv3";
option java_package = "com.postfiat.v3";
option java_multiple_files = true;
option csharp_namespace = "PostFiat.V3";

// Top-level envelope - stored unencrypted in XRPL memo
// Easily detectable as protobuf, version field provides future-proofing
message Envelope {
  // Version for future envelope schema changes
  uint32 version = 1;

  // Hash of the message content for integrity verification
  string content_hash = 2;

  // Type of message content (determines how to parse message field)
  MessageType message_type = 3;

  // How this message is encrypted
  EncryptionMode encryption = 4;

  // Message this is replying to (for threading)
  string reply_to = 5;

  // Removed shared_key_id - PROTECTED mode handles group scenarios

  // Public references - always visible for discovery
  // These enable collaboration discovery without revealing private connections
  repeated ContextReference public_references = 6;

  // Actual message content (may be encrypted based on encryption mode)
  // When encrypted, may contain additional private references
  bytes message = 7;

  // Optional metadata for routing, filtering, etc.
  map<string, string> metadata = 8;
}

// Context reference for selective disclosure
// Supports both public references (hash only) and protected sharing (hash + key)
message ContextReference {
  // Content hash - always present for integrity verification
  string content_hash = 1;

  // Optional decryption key for protected access
  // When present, enables decryption of the referenced content
  // When absent, reference is public but content remains encrypted
  optional string decryption_key = 2;
}

// Remove ContextReferenceType enum - use presence/absence of decryption_key instead

// Multi-part message part for large content
message MultiPartMessagePart {
  // Unique ID for this multi-part message (shared across all parts)
  string message_id = 1;

  // Current part number (1-based)
  uint32 part_number = 2;

  // Total number of parts
  uint32 total_parts = 3;

  // Content of this part
  bytes content = 4;

  // Hash of the complete assembled message for verification
  string complete_message_hash = 5;
}

// Core message for agent-to-agent communication
// Supports bidirectional sharing of context, queries, and responses
// Note: "Message" might be reserved in some protobuf implementations,
// so using "CoreMessage" to avoid conflicts
message CoreMessage {
  // Message content (query, response, or simple text)
  string content = 1;

  // Context references with protected sharing support
  // Enables both public discovery and selective access
  repeated ContextReference context_references = 2;

  // Optional metadata (processing info, confidence, etc.)
  map<string, string> metadata = 3;
}

// Supported message types - extensible enum
enum MessageType {
  // Universal message type - handles all communication
  CORE_MESSAGE = 0;

  // Special case for large content chunking
  MULTIPART_MESSAGE_PART = 1;

  // Reserved for future specialized types when truly needed
  RESERVED_100 = 100;
}

// Encryption modes supported
enum EncryptionMode {
  // No encryption - plaintext (public disclosure)
  NONE = 0;

  // Content-addressable encryption with derived keys
  // Supports both individual and group access through key sharing
  PROTECTED = 1;

  // Traditional public key encryption
  // For direct encrypted communication between known parties
  PUBLIC_KEY = 2;
}

// PostFiat extension for A2A gRPC integration
// Extension URI: https://postfiat.org/extensions/envelope/v1

// PostFiat agent capabilities extension for A2A AgentCard
message PostFiatAgentCapabilities {
  // Supports PostFiat envelope processing
  bool envelope_processing = 1;

  // Supports XRPL ledger persistence
  bool ledger_persistence = 2;

  // Supports selective disclosure context DAG traversal
  bool context_dag_traversal = 3;

  // Maximum context DAG depth supported
  uint32 max_context_depth = 4;

  // Supported encryption modes
  repeated EncryptionMode supported_encryption_modes = 5;
}

// PostFiat envelope payload for A2A Message DataPart
// This is embedded in A2A Message.content as DataPart.data
message PostFiatEnvelopePayload {
  // PostFiat envelope containing selective disclosure content
  Envelope envelope = 1;

  // Optional XRPL transaction hash for ledger persistence
  string xrpl_transaction_hash = 2;

  // Content address for content-addressable retrieval
  string content_address = 3;

  // Metadata for PostFiat-specific processing
  map<string, string> postfiat_metadata = 4;
}